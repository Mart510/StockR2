name: Deploy
# Trigger workflow manually using the GitHub UI
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: 'v2.1.4'

      - name: Check Deno version
        run: deno -v

      # Step 3: Use GitHub env (stored in the repository settings)
      - name: Set environment variables from GitHub env
        run: |
          # Server
          echo "SERVER_AUTH_USERNAME=${{ vars .SERVER_AUTH_USERNAME }}" | tee -a .env
          echo "SERVER_AUTH_PASSWORD=${{ vars .SERVER_AUTH_PASSWORD }}" | tee -a .env

          # Client
          echo "CLIENT_AUTH_USERNAME=${{ vars .CLIENT_AUTH_USERNAME }}" | tee -a .env
          echo "CLIENT_AUTH_PASSWORD=${{ vars .CLIENT_AUTH_PASSWORD }}" | tee -a .env

          # Binance
          echo "BINANCE_BASE_URL=${{ vars .BINANCE_BASE_URL }}" | tee -a .env
          echo "BINANCE_API_KEY=${{ vars .BINANCE_API_KEY }}" | tee -a .env

          # Supabase
          echo "SUPABASE_CONNECTION_URL=${{ vars .SUPABASE_CONNECTION_URL }}" | tee -a .env
          echo "SUPABASE_REST_URL=${{ vars .SUPABASE_REST_URL }}" | tee -a .env
          echo "SUPABASE_API_KEY=${{ vars .SUPABASE_API_KEY }}" | tee -a .env

      # Debugging: Check contents of .env file
      - name: Check contents of .env
        run: cat .env

      # Step 4: Kill any process using port 8000
      - name: Kill processes on port 8000
        run: |
          lsof -ti:8000 | xargs kill -9 || true  # Ensure port 8000 is free

      # Step 5: Restart application with PM2
      - name: Restart application with PM2
        run: pm2 restart ecosystem.config.js  # Adjust the environment as needed
